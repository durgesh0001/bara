{"version":3,"file":"RowSelectorHead.js","sourceRoot":"","sources":["../../src/RowSelectorHead.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAC,MAAM,eAAe,CAAC;AAC/C,OAAO,EAAC,SAAS,EAAC,MAAM,aAAa,CAAC;AAStC,IAAa,eAAe;IAKxB,yBAA2B,OAAkB;QAA7C,iBAWC;QAX0B,YAAO,GAAP,OAAO,CAAW;QAF7C,cAAS,GAAY,KAAK,CAAC;QAGvB,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC;YAG3B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC;YAG7B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAQ,GAAR,UAAS,MAAW;QAChB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QACjC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;QACnC,CAAC;IACL,CAAC;IACL,sBAAC;AAAD,CAAC,AA3BD,IA2BC;AA1BwB;IAApB,KAAK,CAAC,YAAY,CAAC;;mDAAoB;AAD/B,eAAe;IAP3B,SAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE,kLAGL;KACR,CAAC;qCAMsC,SAAS;GALpC,eAAe,CA2B3B;SA3BY,eAAe","sourcesContent":["import {Component, Input} from \"@angular/core\";\nimport {DataTable} from \"./DataTable\";\n\n@Component({\n    selector: \"mfRowSelectorHead\",\n    template: `\n        <input type=\"checkbox\" id=\"{{checkboxId}}\" [checked]=\"isChecked\" (change)=\"onChange($event)\" />\n        <label attr.for=\"{{checkboxId}}\"></label>\n        `\n})\nexport class RowSelectorHead {\n    @Input(\"checkboxId\") checkboxId: string;\n\n    isChecked: boolean = false;\n\n    public constructor(private mfTable: DataTable) {\n        mfTable.onDataChange.subscribe(() => {\n            // always uncheck the header checkbox if the\n            // data has changed in the table\n            this.isChecked = false;\n        });\n        mfTable.onSelectChange.subscribe(() => {\n            // always uncheck when an item checkbox\n            // was interacted with\n            this.isChecked = false;\n        });\n    }\n\n    onChange($event: any) {\n        this.isChecked = !this.isChecked;\n        if (this.isChecked) {\n            this.mfTable.selectAllRows();\n        }\n        else {\n            this.mfTable.deselectAllRows();\n        }\n    }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}